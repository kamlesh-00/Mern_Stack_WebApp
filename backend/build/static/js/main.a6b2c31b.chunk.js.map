{"version":3,"sources":["components/NavbarComponent.js","components/ExerciseListComponent.js","components/EditExerciseComponent.js","components/CreateExerciseComponent.js","components/CreateUserComponent.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","Exercise","props","exercise","username","description","duration","date","substring","_id","href","onClick","deleteExercise","ExerciseList","bind","state","exercises","axios","get","then","res","data","length","setState","catch","err","console","log","id","delete","this","filter","el","map","current","key","exerciseList","EditExercise","Date","users","onChange","onChangeDate","onSubmit","match","params","event","target","value","name","Number","datee","e","preventDefault","update","htmlFor","ref","required","user","type","selected","CreateExercise","post","window","location","CreateUser","onChangeUsername","User","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"yOA0BeA,E,uKArBP,OACI,yBAAKC,UAAU,+CACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBAAvB,gBACA,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,sBACV,wBAAIA,UAAU,eACV,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YAAvB,cAEJ,wBAAIA,UAAU,eACV,kBAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,YAA7B,wBAEJ,wBAAIA,UAAU,eACV,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,YAA3B,uB,GAdPE,a,wBCCrB,SAASC,EAASC,GACd,OACI,4BACI,4BAAKA,EAAMC,SAASC,UACpB,4BAAKF,EAAMC,SAASE,aACpB,4BAAKH,EAAMC,SAASG,UACpB,4BAAKJ,EAAMC,SAASI,KAAKC,UAAU,EAAE,KACrC,4BAAI,kBAAC,IAAD,CAAMT,GAAI,SAASG,EAAMC,SAASM,KAAlC,QAAJ,MAAyD,uBAAGC,KAAK,IAAIC,QAAU,kBAAIT,EAAMU,eAAeV,EAAMC,SAASM,OAA9D,Y,IAmEtDI,E,kDA5DX,WAAYX,GAAO,IAAD,8BACd,cAAMA,IACDU,eAAiB,EAAKA,eAAeE,KAApB,gBACtB,EAAKC,MAAQ,CACTC,UAAW,IAJD,E,gEAQE,IAAD,OACfC,IAAMC,IAAI,kBACTC,MAAK,SAAAC,GACCA,EAAIC,KAAKC,OAAO,GACf,EAAKC,SAAS,CACVP,UAAWI,EAAIC,UAI1BG,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,Q,qCAGbG,GACXX,IAAMY,OAAO,kBAAkBD,GAC9BT,MAAK,SAAAC,GAAG,OAAEM,QAAQC,IAAIP,EAAIC,SAE3BS,KAAKP,SAAS,CACVP,UAAWc,KAAKf,MAAMC,UAAUe,QAAO,SAAAC,GAAE,OAAEA,EAAGvB,MAAMmB,S,qCAI7C,IAAD,OACV,OACIE,KAAKf,MAAMC,UAAUiB,KAAI,SAAAC,GACrB,OAAO,kBAACjC,EAAD,CAAUE,SAAU+B,EAAStB,eAAgB,EAAKA,eAAgBuB,IAAKD,EAAQzB,W,+BAM9F,OACI,6BACI,gDACA,2BAAOX,UAAU,SACb,2BAAOA,UAAU,eACb,4BACI,wCACA,2CACA,wCACA,oCACA,yCAGR,+BACKgC,KAAKM,sB,GAtDHpC,a,yBC6HZqC,G,wDApIX,WAAYnC,GAAO,IAAD,8BACd,cAAMA,IACDa,MAAM,CACPX,SAAS,GACTC,YAAY,GACZC,SAAS,EACTC,KAAK,IAAI+B,KACTC,MAAM,IAEV,EAAKC,SAAW,EAAKA,SAAS1B,KAAd,gBAChB,EAAK2B,aAAe,EAAKA,aAAa3B,KAAlB,gBACpB,EAAK4B,SAAW,EAAKA,SAAS5B,KAAd,gBAXF,E,gEAcE,IAAD,OACfG,IAAMC,IAAI,kBAAkBY,KAAK5B,MAAMyC,MAAMC,OAAOhB,IACnDT,MAAK,SAAAC,GACE,EAAKG,SAAS,CACVnB,SAAUgB,EAAIC,KAAKjB,SACnBC,YAAae,EAAIC,KAAKhB,YACtBC,SAAUc,EAAIC,KAAKf,SACnBC,KAAM,IAAI+B,KAAKlB,EAAIC,KAAKd,WAGlCiB,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAEzBR,IAAMC,IAAI,cACTC,MAAK,SAAAC,GACCA,EAAIC,KAAKC,OAAO,GACf,EAAKC,SAAS,CACVgB,MAAMnB,EAAIC,KAAKY,KAAI,SAAAZ,GAAI,OAAEA,EAAKjB,mB,+BAMrCyC,GACL,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KACV,aAAPA,EACClB,KAAKP,SAAS,CACVjB,SAAU2C,OAAOF,KAGrBjB,KAAKP,SAAL,eACKyB,EAAOD,M,mCAKPG,GACTpB,KAAKP,SAAS,CACVhB,KAAM2C,M,+BAILC,GACLA,EAAEC,iBACF,IAAMjD,EAAW,CACbC,SAAS0B,KAAKf,MAAMX,SACpBC,YAAYyB,KAAKf,MAAMV,YACvBC,SAASwB,KAAKf,MAAMT,SACpBC,KAAKuB,KAAKf,MAAMR,MAGpBmB,QAAQC,IAAIxB,GAEZc,IAAMoC,OAAO,yBAAyBvB,KAAK5B,MAAMyC,MAAMC,OAAOhB,GAAGzB,GAChEgB,MAAK,SAAAC,GAAG,OAAEM,QAAQC,IAAIP,EAAIC,W,+BAM3B,OACI,6BACI,iDACA,0BAAMqB,SAAUZ,KAAKY,UACjB,yBAAK5C,UAAU,cACX,2BAAOwD,QAAQ,YAAf,cACA,4BAAQC,IAAI,YACRC,UAAQ,EACR1D,UAAU,eACViD,MAAOjB,KAAKf,MAAMX,SAClB4C,KAAK,WACLR,SAAUV,KAAKU,UAEXV,KAAKf,MAAMwB,MAAMN,KAAI,SAAAwB,GACjB,OACI,4BAAQtB,IAAKsB,EACTV,MAAOU,GACFA,QAO7B,yBAAK3D,UAAU,cACX,2BAAOwD,QAAQ,eAAf,iBACA,2BAAOI,KAAK,OAAOV,KAAK,cACpBQ,UAAQ,EACR1D,UAAU,eACViD,MAAOjB,KAAKf,MAAMV,YAClBmC,SAAUV,KAAKU,YAGvB,yBAAK1C,UAAU,cACX,2BAAOwD,QAAQ,YAAf,cACA,2BAAOI,KAAK,OAAOV,KAAK,WACpBlD,UAAU,eACViD,MAAOjB,KAAKf,MAAMT,SAClBkC,SAAUV,KAAKU,YAGvB,yBAAK1C,UAAU,cACX,2BAAOwD,QAAQ,QAAf,UACA,kBAAC,IAAD,CACIK,SAAU7B,KAAKf,MAAMR,KACrBiC,SAAUV,KAAKW,gBAGvB,yBAAK3C,UAAU,cACX,2BAAO4D,KAAK,SAASX,MAAM,oBAAoBjD,UAAU,2B,GA9HtDE,cCyHZ4D,E,kDAxHX,WAAY1D,GAAO,IAAD,8BACd,cAAMA,IACDa,MAAM,CACPX,SAAS,GACTC,YAAY,GACZC,SAAS,EACTC,KAAK,IAAI+B,KACTC,MAAM,IAEV,EAAKC,SAAW,EAAKA,SAAS1B,KAAd,gBAChB,EAAK2B,aAAe,EAAKA,aAAa3B,KAAlB,gBACpB,EAAK4B,SAAW,EAAKA,SAAS5B,KAAd,gBAXF,E,gEAcE,IAAD,OACfG,IAAMC,IAAI,cACTC,MAAK,SAAAC,GACCA,EAAIC,KAAKC,OAAO,GACf,EAAKC,SAAS,CACVgB,MAAOnB,EAAIC,KAAKY,KAAI,SAAAwB,GAAI,OAAEA,EAAKrD,YAC/BA,SAAUgB,EAAIC,KAAK,GAAGjB,gB,+BAM7ByC,GACL,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KACV,aAAPA,EACClB,KAAKP,SAAS,CACVjB,SAAU2C,OAAOF,KAGrBjB,KAAKP,SAAL,eACKyB,EAAOD,M,mCAKPG,GACTpB,KAAKP,SAAS,CACVhB,KAAM2C,M,+BAILC,GACLA,EAAEC,iBACF,IAAMjD,EAAW,CACbC,SAAS0B,KAAKf,MAAMX,SACpBC,YAAYyB,KAAKf,MAAMV,YACvBC,SAASwB,KAAKf,MAAMT,SACpBC,KAAKuB,KAAKf,MAAMR,MAGpBmB,QAAQC,IAAIxB,GAEZc,IAAM4C,KAAK,qBAAqB1D,GAC/BgB,MAAK,SAAAC,GAAMM,QAAQC,IAAIP,EAAIC,MAAMyC,OAAOC,SAAW,S,+BAIpD,OACI,6BACI,uDACA,0BAAMrB,SAAUZ,KAAKY,UACjB,yBAAK5C,UAAU,cACX,2BAAOwD,QAAQ,YAAf,cACA,4BAAQC,IAAI,YACRC,UAAQ,EACR1D,UAAU,eACVkD,KAAK,WACLD,MAAOjB,KAAKf,MAAMX,SAClBoC,SAAUV,KAAKU,UAEXV,KAAKf,MAAMwB,MAAMN,KAAI,SAAAwB,GACjB,OACI,4BAAQtB,IAAKsB,EACTV,MAAOU,GACFA,QAO7B,yBAAK3D,UAAU,cACX,2BAAOwD,QAAQ,eAAf,iBACA,2BAAOI,KAAK,OAAOV,KAAK,cACpBQ,UAAQ,EACR1D,UAAU,eACViD,MAAOjB,KAAKf,MAAMV,YAClBmC,SAAUV,KAAKU,YAGvB,yBAAK1C,UAAU,cACX,2BAAOwD,QAAQ,YAAf,cACA,2BAAOI,KAAK,OAAOV,KAAK,WACpBlD,UAAU,eACViD,MAAOjB,KAAKf,MAAMT,SAClBkC,SAAUV,KAAKU,YAGvB,yBAAK1C,UAAU,cACX,2BAAOwD,QAAQ,QAAf,UACA,kBAAC,IAAD,CACIK,SAAU7B,KAAKf,MAAMR,KACrBiC,SAAUV,KAAKW,gBAGvB,yBAAK3C,UAAU,cACX,2BAAO4D,KAAK,SAASX,MAAM,sBAAsBjD,UAAU,2B,GAlHtDE,aCgDdgE,E,kDAjDX,WAAY9D,GAAO,IAAD,8BACd,cAAMA,IACDa,MAAQ,CACTX,SAAU,IAEd,EAAK6D,iBAAmB,EAAKA,iBAAiBnD,KAAtB,gBACxB,EAAK4B,SAAW,EAAKA,SAAS5B,KAAd,gBANF,E,6DASDqC,GACbrB,KAAKP,SAAS,CACVnB,SAAU+C,EAAEL,OAAOC,U,+BAIlBI,GACLA,EAAEC,iBACF,IAAMc,EAAO,CACT9D,SAAU0B,KAAKf,MAAMX,UAGzBsB,QAAQC,IAAIuC,GACZjD,IAAM4C,KAAK,iBAAiBK,GAC3B/C,MAAK,SAAAC,GAAMM,QAAQC,IAAIP,EAAIC,MAAMyC,OAAOC,SAAW,S,+BAIpD,OACI,6BACI,+CACA,0BAAMrB,SAAUZ,KAAKY,UACjB,yBAAK5C,UAAU,cACX,2BAAOwD,QAAQ,YAAf,cACA,2BAAOI,KAAK,OAAOV,KAAK,WACpBQ,UAAQ,EACR1D,UAAU,eACV0C,SAAUV,KAAKmC,iBACflB,MAAOjB,KAAKf,MAAMX,YAG1B,yBAAKN,UAAU,cACX,2BAAO4D,KAAK,SAASX,MAAM,cAAcjD,UAAU,2B,GA3ClDE,aCuBVmE,MAhBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKrE,UAAU,aACf,kBAAC,EAAD,MACA,6BACA,kBAAC,IAAD,CAAOsE,KAAK,IAAIC,OAAK,EAACC,UAAWzD,IACjC,kBAAC,IAAD,CAAOuD,KAAK,YAAYE,UAAWjC,IACnC,kBAAC,IAAD,CAAO+B,KAAK,UAAUE,UAAWV,IACjC,kBAAC,IAAD,CAAOQ,KAAK,QAAQE,UAAWN,IAC/B,kBAAC,IAAD,CAAUjE,GAAG,SCRCwE,QACW,cAA7BT,OAAOC,SAASS,UAEe,UAA7BV,OAAOC,SAASS,UAEhBV,OAAOC,SAASS,SAAS7B,MACvB,2DCbN8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7D,MAAK,SAAA8D,GACJA,EAAaC,gBAEd1D,OAAM,SAAA2D,GACLzD,QAAQyD,MAAMA,EAAMC,a","file":"static/js/main.a6b2c31b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Navbar extends Component{\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n                <Link to='/' className=\"navbar-brand\">ExcerTracker</Link>\r\n                <div className=\"collapse navbar-collapse\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"navbar-item\">\r\n                            <Link to='/' className=\"nav-link\">Exercises</Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <Link to='/create' className=\"nav-link\">Create Exercise Log</Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <Link to='/user' className=\"nav-link\">Create User</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Exercise(props){\r\n    return(\r\n        <tr>\r\n            <td>{props.exercise.username}</td>\r\n            <td>{props.exercise.description}</td>\r\n            <td>{props.exercise.duration}</td>\r\n            <td>{props.exercise.date.substring(0,10)}</td>\r\n            <td><Link to={'/edit/'+props.exercise._id}>edit</Link> | <a href='#' onClick={(()=>props.deleteExercise(props.exercise._id))}>delete</a></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nclass ExerciseList extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.deleteExercise = this.deleteExercise.bind(this);\r\n        this.state = {\r\n            exercises: []\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/api/exercises')\r\n        .then(res=>{\r\n            if(res.data.length>0){\r\n                this.setState({\r\n                    exercises: res.data\r\n                });\r\n            }\r\n        })\r\n        .catch(err=>console.log(err));\r\n    }\r\n\r\n    deleteExercise(id){\r\n        axios.delete('/api/exercises/'+id)\r\n        .then(res=>console.log(res.data));\r\n\r\n        this.setState({\r\n            exercises: this.state.exercises.filter(el=>el._id!==id) \r\n        });\r\n    }\r\n\r\n    exerciseList(){\r\n        return(\r\n            this.state.exercises.map(current=>{\r\n                return <Exercise exercise={current} deleteExercise={this.deleteExercise} key={current._id} />\r\n            })\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3>Logged Exercises</h3>\r\n                <table className='table'>\r\n                    <thead className='thead-light'>\r\n                        <tr>\r\n                            <th>Username</th>\r\n                            <th>Description</th>\r\n                            <th>Duration</th>\r\n                            <th>Date</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.exerciseList()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExerciseList;","import React, { Component } from 'react';\r\n\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nimport axios from 'axios';\r\n\r\nclass EditExercise extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username:'',\r\n            description:'',\r\n            duration:0,\r\n            date:new Date(),\r\n            users:[]\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/api/exercises/'+this.props.match.params.id)\r\n        .then(res=>{\r\n                this.setState({\r\n                    username: res.data.username,\r\n                    description: res.data.description,\r\n                    duration: res.data.duration,\r\n                    date: new Date(res.data.date)\r\n                })\r\n            }\r\n        ).catch(err=>console.log(err));\r\n    \r\n        axios.get('/api/users')\r\n        .then(res=>{\r\n            if(res.data.length>0){\r\n                this.setState({\r\n                    users:res.data.map(data=>data.username)\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    onChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        if(name==='duration'){\r\n            this.setState({\r\n                duration: Number(value)\r\n            })\r\n        }else{\r\n            this.setState({\r\n                [name]: value\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeDate(datee){\r\n        this.setState({\r\n            date: datee\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const exercise = {\r\n            username:this.state.username,\r\n            description:this.state.description,\r\n            duration:this.state.duration,\r\n            date:this.state.date\r\n        }\r\n\r\n        console.log(exercise);\r\n\r\n        axios.update('/api/exercises/update/'+this.props.match.params.id,exercise)\r\n        .then(res=>console.log(res.data));\r\n\r\n        // window.location = '/';\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3>Edit Exercise Log</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='username'>Username: </label>\r\n                        <select ref='userInput'\r\n                            required\r\n                            className='form-control'\r\n                            value={this.state.username}\r\n                            name='username'\r\n                            onChange={this.onChange}>\r\n                            {\r\n                                this.state.users.map(user=>{\r\n                                    return(\r\n                                        <option key={user}\r\n                                            value={user}>\r\n                                                {user}\r\n                                        </option>\r\n                                    );\r\n                                })\r\n                            }\r\n                            </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='description'>Description: </label>\r\n                        <input type='text' name='description'\r\n                            required\r\n                            className='form-control'\r\n                            value={this.state.description}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='duration'>Duration: </label>\r\n                        <input type='text' name='duration'\r\n                            className='form-control'\r\n                            value={this.state.duration}\r\n                            onChange={this.onChange}    \r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='date'>Date: </label>\r\n                        <DatePicker \r\n                            selected={this.state.date}\r\n                            onChange={this.onChangeDate}\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <input type='submit' value='Edit Exercise Log' className='btn btn-primary' />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditExercise;","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nimport axios from 'axios';\r\n\r\nclass CreateExercise extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username:'',\r\n            description:'',\r\n            duration:0,\r\n            date:new Date(),\r\n            users:[]\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/api/users')\r\n        .then(res=>{\r\n            if(res.data.length>0){\r\n                this.setState({\r\n                    users: res.data.map(user=>user.username),\r\n                    username: res.data[0].username\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    onChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        if(name==='duration'){\r\n            this.setState({\r\n                duration: Number(value)\r\n            })\r\n        }else{\r\n            this.setState({\r\n                [name]: value\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeDate(datee){\r\n        this.setState({\r\n            date: datee\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const exercise = {\r\n            username:this.state.username,\r\n            description:this.state.description,\r\n            duration:this.state.duration,\r\n            date:this.state.date\r\n        }\r\n\r\n        console.log(exercise);\r\n\r\n        axios.post('/api/exercises/add',exercise)\r\n        .then(res=>{console.log(res.data);window.location = '/';});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3>Create new Exercise Log</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='username'>Username: </label>\r\n                        <select ref='userInput'\r\n                            required\r\n                            className='form-control'\r\n                            name='username'\r\n                            value={this.state.username}\r\n                            onChange={this.onChange}>\r\n                            {\r\n                                this.state.users.map(user=>{\r\n                                    return(\r\n                                        <option key={user}\r\n                                            value={user}>\r\n                                                {user}\r\n                                        </option>\r\n                                    );\r\n                                })\r\n                            }\r\n                            </select>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='description'>Description: </label>\r\n                        <input type='text' name='description'\r\n                            required\r\n                            className='form-control'\r\n                            value={this.state.description}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='duration'>Duration: </label>\r\n                        <input type='text' name='duration'\r\n                            className='form-control'\r\n                            value={this.state.duration}\r\n                            onChange={this.onChange}    \r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='date'>Date: </label>\r\n                        <DatePicker \r\n                            selected={this.state.date}\r\n                            onChange={this.onChangeDate}\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <input type='submit' value='Create Exercise Log' className='btn btn-primary' />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateExercise;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass CreateUser extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: ''\r\n        };\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChangeUsername(e){\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const User = {\r\n            username: this.state.username\r\n        };\r\n\r\n        console.log(User);\r\n        axios.post('/api/users/add',User)\r\n        .then(res=>{console.log(res.data);window.location = '/';})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3>Create New User</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className='form-group'>\r\n                        <label htmlFor='username'>Username: </label>\r\n                        <input type='text' name='username'\r\n                            required\r\n                            className='form-control'\r\n                            onChange={this.onChangeUsername}\r\n                            value={this.state.username}\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <input type='submit' value='Create User' className='btn btn-primary' />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateUser;","import React from 'react';\nimport {BrowserRouter as Router,Route,Redirect} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Navbar from './components/NavbarComponent';\nimport ExerciseList from './components/ExerciseListComponent';\nimport EditExercise from './components/EditExerciseComponent'\nimport CreateExercise from './components/CreateExerciseComponent';\nimport CreateUser from './components/CreateUserComponent';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n      <Navbar />\n      <br />\n      <Route path=\"/\" exact component={ExerciseList} />\n      <Route path=\"/edit/:id\" component={EditExercise} />\n      <Route path=\"/create\" component={CreateExercise} />\n      <Route path=\"/user\" component={CreateUser} />\n      <Redirect to=\"/\" />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}